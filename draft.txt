

to research:
    - IBL
    - tesselation shaders 
    - order independent transparancy
    - transform feedback
    - compute shaders

spore/spaz spacegame idea:
    level 1:
        fly simple ship around in asteroid field, and have blasters go pew pew.
        prerequisits: figure out project structure
            - from scratch
            - from library (dll)
            - from engine (dll + exe)


    level 2:
        spore-like ship editor
        prerequisits: learn uv stuff in blender
        and create kitbash of ship parts
            - cockpit
            - engine
            - hull
            - wings
            - blaster
        
    level 3: 
        dock with station to create/modify/switch ship

    level 4:
        


blocky spacegame idea:
    level 1:
        build ship out of blocks
    level 2:
        bake all blocks into one mesh
    level 3:
        place thrusters on ship, and have them thrust



game design principles:
    - premature optimalization/abstraction
    - kiss (keep it simple stupid)
    - feature creep



what to use Source Generators for:
    - Nums
    - void update() instead of protected override void update()
    - scripting language transpiler
    - generating a parser (Pgen)
    - integrate assets into assembly
    - reflection (inside Prefab) begone

